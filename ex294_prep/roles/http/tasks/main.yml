---
# tasks file for http 
#  force_handlers: true
#  tasks:
  - name: check SElinux enforcing
    selinux:
      state: enforcing
      policy: targeted
    register: selinux
  - name: reboot if needed
    reboot:
    when: selinux.reboot_required
  - name: install httpd
    yum:
     name:
     - httpd
     - firewalld
     - mod_ssl
     - policycoreutils-python-utils
     state: latest
  - name: enable and start http
    service:
      name: "{{ item }}"
      state: started
      enabled: true
    with_items:
    - httpd
    - firewalld
  - name: config http
    block:
    - lineinfile:
        path: "{{ httpd_conf }}"
        regexp: "^Listen"
        line: "Listen {{ http_port }}"
      notify: restart_httpd
    - name: config https
      lineinfile:
        path: "{{ https_conf }}"
        regexp: "^Listen"
        line: "Listen {{ https_port }}"
      notify: restart_httpd
    - name: Apache  VirtualHosts
      template:
        src: "{{ item }}"
        dest: "{{ httpd_conf_dir }}/{{item}}.vhost.conf"
        owner: root
        mode: '0644'
      with_items:
      - http_template.j2
      - https_template.j2
      notify: restart_httpd

  - name: prepare http files
    block:
    - file:
        state: directory
        path: "{{ http_folder }}/{{ ansible_facts['hostname'] }}"
    - template:
        src: http_index.j2
        dest: "{{ http_folder }}/{{ ansible_facts['hostname'] }}/index.html"
    - name: Allow apache to modify files in  "{{ http_folder }}"
      sefcontext:
        target: '{{ http_folder }}(/.*)?'
        setype: httpd_sys_content_t
        state: present
    - name: Apply new SELinux file context to filesystem
      command: restorecon -irv  "{{ http_folder }}"
  - name: add port to the firewall and selinux
    block:
    - firewalld:
        port: "{{ item }}"
        state: enabled
        permanent: true
        immediate: true
      with_items:
      - "{{ http_port }}/tcp"
      - "{{ https_port }}/tcp"
    - name: Allow Apache to listen on tcp port "{{ http_port }}"
      seport:
          ports: "{{ item }}"
          proto: tcp
          setype: http_port_t
          state: present
      with_items:
      - "{{ http_port }}"
      - "{{ https_port }}"
      notify: restart_httpd


